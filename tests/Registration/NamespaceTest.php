<?php

namespace Jaxon\Tests\Registration;

use Jaxon\Jaxon;
use Jaxon\Request\Plugin\CallableClass\CallableClassPlugin;
use Jaxon\Request\Plugin\CallableClass\CallableDirPlugin;
use Jaxon\Exception\SetupException;
use PHPUnit\Framework\TestCase;

class NamespaceTest extends TestCase
{
    /**
     * @var CallableDirPlugin
     */
    protected $xDirPlugin;

    /**
     * @var CallableClassPlugin
     */
    protected $xClassPlugin;

    public function setUp(): void
    {
        jaxon()->setOption('core.prefix.class', '');

        // This directory is already registered with the autoload.
        jaxon()->register(Jaxon::CALLABLE_DIR, __DIR__ . '/../Ns',
            ['namespace' => "Jaxon\\Tests\\Ns", 'autoload' => false]);
        // This directory needs to be registered with the autoload.
        jaxon()->register(Jaxon::CALLABLE_DIR, __DIR__ . '/../dir_ns', "Jaxon\\NsTests");

        $this->xDirPlugin = jaxon()->di()->getCallableDirPlugin();
        $this->xClassPlugin = jaxon()->di()->getCallableClassPlugin();
    }

    public function tearDown(): void
    {
        jaxon()->reset();
        parent::tearDown();
    }

    public function testPluginName()
    {
        $this->assertEquals(Jaxon::CALLABLE_DIR, $this->xDirPlugin->getName());
    }

    public function testCallableDirJsCode()
    {
        // The script is generated by the CallableClass plugin
        $this->assertEquals(32, strlen($this->xClassPlugin->getHash()));
        // $this->assertEquals('a345cf8862e7ce14752fba0e789adc1c', $this->xClassPlugin->getHash());
        $this->assertEquals(file_get_contents(__DIR__ . '/../script/ns.js'), $this->xClassPlugin->getScript());
    }

    public function testClassNotFound()
    {
        // No callable for standard PHP functions.
        $this->expectException(SetupException::class);
        $this->xDirPlugin->getCallable('Simple');
    }
}
